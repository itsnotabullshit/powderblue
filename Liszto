-- First Assignment
-- Reimplement Haskell function
-- DON'T USE GOOGLE
module Liszto where

import Data.List

-- 1.a

null' h = 0
    | h == [] = True
    | otherwise = False

--pembatas

take' n (x:xs)
  | n == 0 = []
  | n /= 0 = [x] ++ take' (n-1) xs

--pembatas

drop' n [] = []
drop' n (x:xs)
  | n == 0 = x:xs
  | n /= 0 = drop' (n-1) xs

--pembatas

fst' a b = a

--pembatas

snd' a b = b

--pembatas

map' x = x

--pembatas

filter' x = x

--pembatas

delete' _ [] = []
delete' n (x:xs)
  | n == x = (xs)
  | n /= x = [x] ++ delete' n (xs)

--pembatas

deleteAll' x = x

--pembatas

foldl' x = x

--pembatas

foldl1' x = x

--pembatas

zip' x = x

--pembatas

zipWith' x = x

--pembatas

nth' x = x

--pembatas

sort' x = x

--pembatas

scanl' x = x

--pembatas

scanl1' x = x

--pembatas

elem' _ [] = False
elem' n (x:xs)
    | n == (x) = True
    | n /= (x) = elem' n (xs)

--pembatas

notElem' _ [] = True
notElem' n (x:xs)
  | n == (x) = False
  | n /= (x) = notElem' n (xs)

--pembatas

head' [n] = n
head' (x:xs) = x

--pembatas

length' [] = 0
length' (x:xs) = 1 + length' xs

--pembatas

reverse' x = x

--pembatas

last' [n] = n
last' (x:xs) = last' xs

--pembatas

tail' (x:xs) = xs

--pembatas

init' [n] = []
init' (x:xs) = [x] ++ init' (xs)

--pembatas

max' h i
    | h > i = h
    | h < i = i

--pembatas

min' h i
    | h < i = h
    | h > i = i

--pembatas

concat' x = x

--pembatas

intersperse' x = x

--pembatas

intercalate' x = x

--pembatas

and' x = x

--pembatas

or' x = x

--pembatas

zip3' x = x

--pembatas

sum' [] = 0
  | sum (x:xs) = x + sum xs

--pembatas

product' [] = 1
product' [n] = n
product' (x:xs) = (x) * product' (xs)

--pembatas

words' x = x

--pembatas

lines' x = x

--pembatas

unlines' x = x

--pembatas

unwords' x = x

--pembatas

takeWhile' x = x

--pembatas

dropWhile' x = x

--pembatas

concatMap' x = x

--pembatas

all' x = x

--pembatas

any' x = x

--pembatas

insert' n [] = [n]
insert' n (x:xs) = n : (x:xs)

--pembatas

zipWith3' x = x

--pembatas

-- 1.b

nub' x = x

--pembatas

sort' x = x

--pembatas

minimum' x = x

--pembatas

maximum' x = x

--pembatas

inits' x = x

--pembatas

tails' x = x

--pembatas

union' x = x

--pembatas

intersect' x = x

--pembatas

group' x = x

--pembatas

splitAt' x = x

--pembatas

partition' x = x

--pembatas

replicate' x = x

--pembatas
-- First Assignment
-- Reimplement Haskell function
-- DON'T USE GOOGLE
